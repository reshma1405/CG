package com.capgemini.Dto;

import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;

public class FlightDTO {

    // Flight properties
    private Long flightNumber; // Flight number will be auto-generated by the database, so no validation needed here.

    @NotNull(message = "{flight.model.notnull}")
    @Size(min = 3, max = 50, message = "{flight.model.size}")
    @Pattern(regexp = "^[A-Za-z0-9\\s]*$", message = "{flight.model.specialchar}")  // Allow only alphanumeric characters and spaces
    private String flightModel;

    @NotNull(message = "{carrier.name.notnull}")
    @Size(min = 3, max = 50, message = "{carrier.name.size}")
    @Pattern(regexp = "^[A-Za-z0-9\\s]*$", message = "{carrier.name.specialchar}")  // Allow only alphanumeric characters and spaces
    private String carrierName;

    @NotNull(message = "{seat.capacity.notnull}")
    @Min(value = 1, message = "{seat.capacity.min}")
    @Max(value = 200, message = "{seat.capacity.max}")  // Seat capacity should be between 1 and 200
    private Integer seatCapacity;

    // ScheduledFlight properties
    @NotNull(message = "{availableSeats.notNull}")
    @Min(value = 1, message = "{availableSeats.min}")
    @Max(value = 250, message = "{availableSeats.max}")
    private Integer availableSeats; // Changed to Integer for consistency with validation

    @NotNull(message = "{scheduleId.notNull}")
    @Min(value = 1, message = "{scheduleId.notNull}")
    private Integer scheduleId;

    @NotNull(message = "{fares.notNull}")
    @Min(value = 2000, message = "{fares.min}")
    @Max(value = 200000, message = "{fares.max}")
    private Double fares; // Changed to Double for consistency with the fares value

    // Default constructor
    public FlightDTO() {}

    // Constructor with parameters
    public FlightDTO(String flightModel, String carrierName, Integer seatCapacity,
                     Integer availableSeats, Integer scheduleId, Double fares) {
        this.flightModel = flightModel;
        this.carrierName = carrierName;
        this.seatCapacity = seatCapacity;
        this.availableSeats = availableSeats;
        this.scheduleId = scheduleId;
        this.fares = fares;
    }

    // Getters and setters for flight properties
    public Long getFlightNumber() {
        return flightNumber;
    }

    // Do not set flightNumber manually in DTO
    public void setFlightNumber(Long flightNumber) {
        this.flightNumber = flightNumber;
    }

    public String getFlightModel() {
        return flightModel;
    }

    public void setFlightModel(String flightModel) {
        this.flightModel = flightModel;
    }

    public String getCarrierName() {
        return carrierName;
    }

    public void setCarrierName(String carrierName) {
        this.carrierName = carrierName;
    }

    public Integer getSeatCapacity() {
        return seatCapacity;
    }

    public void setSeatCapacity(Integer seatCapacity) {
        this.seatCapacity = seatCapacity;
    }

    // Getters and setters for scheduled flight properties
    public Integer getAvailableSeats() {
        return availableSeats;
    }

    public void setAvailableSeats(Integer availableSeats) {
        this.availableSeats = availableSeats;
    }

    public Integer getScheduleId() {
        return scheduleId;
    }

    public void setScheduleId(Integer scheduleId) {
        this.scheduleId = scheduleId;
    }

    public Double getFares() {
        return fares;
    }

    public void setFares(Double fares) {
        this.fares = fares;
    }
}
